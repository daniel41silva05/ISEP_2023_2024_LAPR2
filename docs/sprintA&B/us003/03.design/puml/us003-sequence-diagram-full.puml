@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources\nManager" as HRM
participant ":RegisterCollaboratorUI" as UI
participant ":RegisterCollaboratorControlller" as CTRL
participant ":Repositories" as REP
participant "repositories\n:Repositories" as REPS
participant "jobRepository:\njobRepository" as jobRepository
participant "collaboratorRepository:\ncollaboratorRepository" as collaboratorRepository
participant "collaborator\n:Collaborator" as COLLABORATOR

activate HRM

    HRM -> UI : asks to register a new collaborator
    activate UI

        UI -> CTRL** : create

    UI --> HRM : requests data
    deactivate UI

    HRM -> UI : types/selects requested data
    activate UI

        UI -> CTRL : getJobs()
        activate CTRL

            CTRL -> REP : getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS : getJobRepository()
            activate REPS

            REPS --> CTRL: JobRepository
            deactivate REPS

            CTRL -> jobRepository: getJobsList()
            activate jobRepository

            jobRepository --> CTRL : JobsList
            deactivate jobRepository

            CTRL --> UI : JobsList
            deactivate CTRL

    UI --> HRM : shows the list of jobs and asks to select one
    deactivate UI

    HRM -> UI : selects the job
    activate UI

    UI --> HRM : shows all data and requests confirmation
    deactivate UI

    HRM -> UI : confirms data
    activate UI

        UI -> CTRL: registerCollaborator(job, name, birthday, admissionDate, address, phoneNumber, email, idNumber)
        activate CTRL

            CTRL -> REP: getInstance()
            activate REP

            REP --> CTRL: repositories
            deactivate REP

            CTRL -> REPS: getCollaboratorRepository()
            activate REPS

            REPS --> CTRL: collaboratorRepository
            deactivate REPS

            CTRL -> collaboratorRepository: registerCollaborator(job, name, birthday, admissionDate, address, phoneNumber, email, idNumber)
            activate collaboratorRepository

                collaboratorRepository -> COLLABORATOR** : register(job, name, birthday, admissionDate, address, phoneNumber, email, idNumber)

                collaboratorRepository -> collaboratorRepository: addCollaborator (colaborator)
                activate collaboratorRepository

                collaboratorRepository -> collaboratorRepository: validateCollaborator (colaborator)
                activate collaboratorRepository

                collaboratorRepository --> collaboratorRepository
                deactivate collaboratorRepository

                collaboratorRepository --> collaboratorRepository
                deactivate collaboratorRepository

            collaboratorRepository --> CTRL: collaborator
            deactivate collaboratorRepository

        CTRL --> UI: collaborator
        deactivate CTRL

    UI --> HRM: displays operation success
    deactivate UI

deactivate HRM

@enduml