@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction

class AddEntryAgendaUI {
}

class AddEntryAgendaController {
    +AddEntryAgendaController(agenda, toDoList)
    +addEntryAgenda(startingDate, taskReference)
    -getTaskByReference(taskReference)
    +getTasksList()
}

class Agenda {
    -addEntry(entry)
    -validateEntry(entry)
    +addEntryAgenda(startingDate, task)
}

class Entry {
    -Date startingDate
    +Entry(startingDate, task)
}

class ToDoList {
    +getTaskByReference(taskReference)
}

class Task {
    -String reference
    -String description
    -EmergencyDegree degreeOfUrgency
    -int expectedDuration
    +Task(reference, description, degreeOfUrgency, expectedDuration)
}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getAgenda()
    + getToDoList()
}

enum AgendaStatus {
    PLANNED
    POSTPONED
    CANCELED
    DONE
}

enum TaskStatus {
    PENDING
    PROCESSED
}

AddEntryAgendaUI ..> AddEntryAgendaController
AddEntryAgendaController ..> Repositories: repositories
AddEntryAgendaController ..> Agenda: agenda
AddEntryAgendaController ..> ToDoList: toDoList
Repositories --> Repositories: instance
Repositories --> "1" Agenda
Repositories --> "1" ToDoList
Agenda --> "*" Entry
ToDoList --> "*" Task
Entry --> "1" Task
Entry --> "1" AgendaStatus
Task --> "1" TaskStatus

@enduml